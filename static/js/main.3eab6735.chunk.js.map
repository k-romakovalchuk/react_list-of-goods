{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","listVisible","isReversed","sortGoods","sortLength","reset","reverse","setState","sortAlpha","this","newGoods","filter","good","sort","g1","g2","localeCompare","length","splice","className","type","onClick","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mPAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAYIC,E,4MACJC,MAAQ,CACNC,MAAOH,EACPI,aAAa,EACbC,YAAY,EACZC,UAAW,GACXC,YAAY,EACZC,OAAO,G,EAGTC,QAAU,WACR,EAAKC,UAAS,SAACR,GAAD,MAAY,CACxBG,YAAaH,EAAMG,gB,EAIvBM,UAAY,WACV,EAAKD,SAAS,CAAEJ,UAAW,W,EAG7BE,MAAQ,WACN,EAAKE,SAAS,CAAEF,OAAO,K,EAGzBD,WAAa,WACX,EAAKG,SAAS,CAAEJ,UAAW,WAC3B,EAAKI,UAAS,SAACR,GAAD,MAAY,CACxBK,YAAaL,EAAMK,gB,4CAIvB,WAAU,IAAD,OACP,EAEIK,KAAKV,MADPC,EADF,EACEA,MAAOC,EADT,EACSA,YAAaC,EADtB,EACsBA,WAAYC,EADlC,EACkCA,UAAWC,EAD7C,EAC6CA,WAAYC,EADzD,EACyDA,MAEnDK,EAAWV,EAAMW,QAAO,SAAAC,GAAI,OAAIA,KAyBtC,OAvBAF,EAASG,MAAK,SAACC,EAAIC,GACjB,OAAQZ,GACN,IAAK,QACH,OAAOW,EAAGE,cAAcD,GAC1B,IAAK,SACH,OAAIX,EACKU,EAAGG,OAASF,EAAGE,OAGjBF,EAAGE,OAASH,EAAGG,OACxB,QACE,OAAO,OAIC,IAAVZ,GACFK,EAASQ,OAAT,MAAAR,EAAQ,CAAQ,EAAGV,EAAMiB,QAAjB,mBAA4BjB,KAGlCE,GACFQ,EAASJ,UAIT,sBAAKa,UAAU,MAAf,UACE,wCACiB,IAAhBlB,GAEC,wBACEmB,KAAK,SACLC,QAAS,WACP,EAAKd,SAAS,CAAEN,aAAa,KAHjC,oBASe,IAAhBA,GAEC,qCACE,6BACGS,EAASY,KAAI,SAAAV,GAAI,OAChB,6BACGA,GADMA,QAKb,wBACEQ,KAAK,SACLC,QAAS,WACP,EAAKf,WAHT,qBAQA,wBACEc,KAAK,SACLC,QAAS,WACP,EAAKb,aAHT,iCAQA,wBACEY,KAAK,SACLC,QAAS,WACP,EAAKjB,cAHT,4BAQA,wBACEgB,KAAK,SACLC,QAAS,WACP,EAAKhB,SAHT,6B,GA5GMkB,IAAMC,WA2HT1B,IClJf2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3eab6735.chunk.js","sourcesContent":["// import { type } from 'os';\nimport React from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goods: string[],\n  listVisible: boolean,\n  isReversed: boolean,\n  sortGoods: string,\n  sortLength: boolean,\n  reset: boolean,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    goods: goodsFromServer,\n    listVisible: false,\n    isReversed: false,\n    sortGoods: '',\n    sortLength: false,\n    reset: false,\n  };\n\n  reverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortAlpha = () => {\n    this.setState({ sortGoods: 'Alpha' });\n  };\n\n  reset = () => {\n    this.setState({ reset: true });\n  };\n\n  sortLength = () => {\n    this.setState({ sortGoods: 'Length' });\n    this.setState((state) => ({\n      sortLength: !state.sortLength,\n    }));\n  };\n\n  render() {\n    const {\n      goods, listVisible, isReversed, sortGoods, sortLength, reset,\n    } = this.state;\n    const newGoods = goods.filter(good => good);\n\n    newGoods.sort((g1, g2) => {\n      switch (sortGoods) {\n        case 'Alpha':\n          return g1.localeCompare(g2);\n        case 'Length':\n          if (sortLength) {\n            return g1.length - g2.length;\n          }\n\n          return g2.length - g1.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (reset === true) {\n      newGoods.splice(0, goods.length, ...goods);\n    }\n\n    if (isReversed) {\n      newGoods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {listVisible === false\n        && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.setState({ listVisible: true });\n            }}\n          >\n            Start\n          </button>\n        )}\n        {listVisible === true\n        && (\n          <>\n            <ul>\n              {newGoods.map(good => (\n                <li key={good}>\n                  {good}\n                </li>\n              ))}\n            </ul>\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.reverse();\n              }}\n            >\n              Reverse\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.sortAlpha();\n              }}\n            >\n              Sort alphabetically\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.sortLength();\n              }}\n            >\n              Sort by length\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.reset();\n              }}\n            >\n              Reset\n            </button>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}